1. give functions f: N -> N that satisfy
	a) total and 1-to-1 but not onto
		f(x) = x*2
	b) total and onto but not 1-to-1
		f(x) = abs(x-1)
	c) total, 1-to-1, and onto
		f(x) = x+1
	d) not total, but is onto
		f(x) = x+1, x>0

2. show that the binary relation LT is not an equivalence relation
	If LT is an equivalence relation it is reflexive, symmetric, and transitive.
	Lets assume it is an equivalence relation and that..
	x <- N:
	 then for reflexivity  x < x = x < x, however it is never the case the an element is less than itself thus it is not an equivalence relation. 
	 similarily, x <- N and y <- N, assume x < y so for reflexivity y < x
	 which would not be true if x < y was true.

3. i. [1,0] is in GT
   ii. if [m,n] in GT, then [s(m),n] in GT and [s(m),s(n)] in GT
   iii. [o,p] is in GT if it can be obtained by any amount of applications of ii.

4. prove 2 + 5 + 8 + .. + (3n-1) = n(3n + 1)/2
	sum (i=1; n; 3i-1)
	BC: i=1, 3i-1 = 2
		i(3i+1)/2 = 4/2 = 2
	IH: sum up to k is = k(3k+1)/2
	Proof: for k+1 you can have->
		sum (i=1; k; 3-1) + (3(k+1)-1) => (k+1)(3(k+1)+1)/2
	IH->k(3k+1)/2 + (3(k+1)-1)
		k(3k+1)/2 + 2(3(k+1)-1)/2
		k(3k+1) + 2(3(k+1)-1)/2
		k(3k) + k + 6(k+1) - 2 / 2
		k(3k) + k + 6k + 6 - 2 / 2
		k(3k) + 7k + 4 / 2
		3k^2 + 7k + 4 / 2
		(k+1)(3(k+1)+1) / 2 <-- I skipped a step so what.

5. i. Basis: Let L be the set of strings with twice as many a's than b's for {a,b}, the string aab is in L.
   ii. Recursive Step: a word w, is in L then (aab U baa)w and w(aab U baa) are also in L
   iii. a word p is in L if p can be derived to the basis with finite applications of ii.

6. 
